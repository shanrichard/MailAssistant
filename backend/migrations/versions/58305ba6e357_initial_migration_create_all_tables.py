"""Initial migration: create all tables

Revision ID: 58305ba6e357
Revises: 
Create Date: 2025-07-14 11:18:04.536470

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '58305ba6e357'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('google_id', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('encrypted_gmail_tokens', sa.Text(), nullable=True),
    sa.Column('preferences_text', sa.Text(), nullable=True),
    sa.Column('daily_report_time', sa.Time(), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_google_id'), 'users', ['google_id'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('daily_reports',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('report_date', sa.Date(), nullable=False),
    sa.Column('total_emails', sa.Integer(), nullable=True),
    sa.Column('important_emails_count', sa.Integer(), nullable=True),
    sa.Column('spam_emails_count', sa.Integer(), nullable=True),
    sa.Column('promotional_emails_count', sa.Integer(), nullable=True),
    sa.Column('social_emails_count', sa.Integer(), nullable=True),
    sa.Column('unread_emails_count', sa.Integer(), nullable=True),
    sa.Column('important_emails', sa.JSON(), nullable=True),
    sa.Column('category_summary', sa.JSON(), nullable=True),
    sa.Column('business_opportunities', sa.JSON(), nullable=True),
    sa.Column('business_opportunities_count', sa.Integer(), nullable=True),
    sa.Column('top_senders', sa.JSON(), nullable=True),
    sa.Column('new_senders', sa.JSON(), nullable=True),
    sa.Column('trending_keywords', sa.JSON(), nullable=True),
    sa.Column('important_topics', sa.JSON(), nullable=True),
    sa.Column('personal_insights', sa.JSON(), nullable=True),
    sa.Column('preference_matches', sa.JSON(), nullable=True),
    sa.Column('recommended_actions', sa.JSON(), nullable=True),
    sa.Column('priority_emails', sa.JSON(), nullable=True),
    sa.Column('generation_time_ms', sa.Integer(), nullable=True),
    sa.Column('llm_provider', sa.String(length=50), nullable=True),
    sa.Column('llm_model', sa.String(length=100), nullable=True),
    sa.Column('report_version', sa.String(length=20), nullable=True),
    sa.Column('user_rating', sa.Integer(), nullable=True),
    sa.Column('user_feedback', sa.Text(), nullable=True),
    sa.Column('is_useful', sa.Boolean(), nullable=True),
    sa.Column('is_sent', sa.Boolean(), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_read_by_user', sa.Boolean(), nullable=True),
    sa.Column('read_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_daily_reports_date', 'daily_reports', ['report_date'], unique=False)
    op.create_index('idx_daily_reports_user_date', 'daily_reports', ['user_id', 'report_date'], unique=True)
    op.create_index('idx_daily_reports_user_id', 'daily_reports', ['user_id'], unique=False)
    op.create_table('emails',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('gmail_id', sa.String(length=255), nullable=False),
    sa.Column('thread_id', sa.String(length=255), nullable=False),
    sa.Column('subject', sa.Text(), nullable=False),
    sa.Column('sender', sa.String(length=255), nullable=False),
    sa.Column('recipients', sa.Text(), nullable=True),
    sa.Column('cc_recipients', sa.Text(), nullable=True),
    sa.Column('bcc_recipients', sa.Text(), nullable=True),
    sa.Column('body_plain', sa.Text(), nullable=True),
    sa.Column('body_html', sa.Text(), nullable=True),
    sa.Column('received_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('is_important', sa.Boolean(), nullable=True),
    sa.Column('has_attachments', sa.Boolean(), nullable=True),
    sa.Column('labels', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('importance_score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('gmail_id')
    )
    op.create_index('idx_emails_category', 'emails', ['category'], unique=False)
    op.create_index('idx_emails_gmail_id', 'emails', ['gmail_id'], unique=False)
    op.create_index('idx_emails_importance', 'emails', ['importance_score'], unique=False)
    op.create_index('idx_emails_received_at', 'emails', ['received_at'], unique=False)
    op.create_index('idx_emails_user_id', 'emails', ['user_id'], unique=False)
    op.create_table('task_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('task_type', postgresql.ENUM('EMAIL_SYNC', 'EMAIL_ANALYSIS', 'DAILY_REPORT', 'BATCH_OPERATION', 'PREFERENCE_UPDATE', 'CLEANUP', name='tasktype'), nullable=False),
    sa.Column('task_name', sa.String(length=255), nullable=False),
    sa.Column('task_description', sa.Text(), nullable=True),
    sa.Column('status', postgresql.ENUM('PENDING', 'RUNNING', 'COMPLETED', 'FAILED', 'CANCELLED', 'RETRYING', name='taskstatus'), nullable=False),
    sa.Column('progress_percentage', sa.Integer(), nullable=True),
    sa.Column('input_parameters', sa.JSON(), nullable=True),
    sa.Column('output_results', sa.JSON(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('execution_time_ms', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('error_traceback', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('max_retries', sa.Integer(), nullable=True),
    sa.Column('last_retry_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('memory_usage_mb', sa.Float(), nullable=True),
    sa.Column('cpu_usage_percent', sa.Float(), nullable=True),
    sa.Column('emails_processed', sa.Integer(), nullable=True),
    sa.Column('emails_analyzed', sa.Integer(), nullable=True),
    sa.Column('operations_performed', sa.Integer(), nullable=True),
    sa.Column('priority_level', sa.Integer(), nullable=True),
    sa.Column('scheduled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_scheduled', sa.Boolean(), nullable=True),
    sa.Column('is_recurring', sa.Boolean(), nullable=True),
    sa.Column('recurring_pattern', sa.String(length=100), nullable=True),
    sa.Column('parent_task_id', sa.UUID(), nullable=True),
    sa.Column('depends_on_tasks', sa.JSON(), nullable=True),
    sa.Column('worker_id', sa.String(length=100), nullable=True),
    sa.Column('task_version', sa.String(length=20), nullable=True),
    sa.Column('environment', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['parent_task_id'], ['task_logs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_task_logs_created_at', 'task_logs', ['created_at'], unique=False)
    op.create_index('idx_task_logs_priority', 'task_logs', ['priority_level'], unique=False)
    op.create_index('idx_task_logs_scheduled_at', 'task_logs', ['scheduled_at'], unique=False)
    op.create_index('idx_task_logs_status', 'task_logs', ['status'], unique=False)
    op.create_index('idx_task_logs_type', 'task_logs', ['task_type'], unique=False)
    op.create_index('idx_task_logs_user_id', 'task_logs', ['user_id'], unique=False)
    op.create_table('user_preferences',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('preference_type', sa.String(length=50), nullable=False),
    sa.Column('preference_key', sa.String(length=255), nullable=False),
    sa.Column('preference_value', sa.Text(), nullable=False),
    sa.Column('is_important', sa.Boolean(), nullable=True),
    sa.Column('priority_level', sa.Integer(), nullable=True),
    sa.Column('natural_description', sa.Text(), nullable=True),
    sa.Column('description_embedding', sa.String(), nullable=True),
    sa.Column('match_count', sa.Integer(), nullable=True),
    sa.Column('positive_feedback_count', sa.Integer(), nullable=True),
    sa.Column('negative_feedback_count', sa.Integer(), nullable=True),
    sa.Column('effectiveness_score', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_learned', sa.Boolean(), nullable=True),
    sa.Column('source', sa.String(length=50), nullable=True),
    sa.Column('confidence_level', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_matched_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_preferences_active', 'user_preferences', ['is_active'], unique=False)
    op.create_index('idx_user_preferences_key', 'user_preferences', ['preference_key'], unique=False)
    op.create_index('idx_user_preferences_priority', 'user_preferences', ['priority_level'], unique=False)
    op.create_index('idx_user_preferences_type', 'user_preferences', ['preference_type'], unique=False)
    op.create_index('idx_user_preferences_user_id', 'user_preferences', ['user_id'], unique=False)
    op.create_table('email_analyses',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('llm_provider', sa.String(length=50), nullable=False),
    sa.Column('llm_model', sa.String(length=100), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('importance_score', sa.Float(), nullable=False),
    sa.Column('importance_reason', sa.Text(), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('key_points', sa.JSON(), nullable=True),
    sa.Column('sentiment', sa.String(length=20), nullable=True),
    sa.Column('urgency_level', sa.String(length=20), nullable=True),
    sa.Column('has_business_opportunity', sa.Boolean(), nullable=True),
    sa.Column('business_opportunity_type', sa.String(length=100), nullable=True),
    sa.Column('business_opportunity_description', sa.Text(), nullable=True),
    sa.Column('matches_user_preferences', sa.Boolean(), nullable=True),
    sa.Column('preference_match_reasons', sa.JSON(), nullable=True),
    sa.Column('recommended_actions', sa.JSON(), nullable=True),
    sa.Column('content_embedding', sa.String(), nullable=True),
    sa.Column('analysis_version', sa.String(length=20), nullable=True),
    sa.Column('processing_time_ms', sa.Integer(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['email_id'], ['emails.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('email_analyses')
    op.drop_index('idx_user_preferences_user_id', table_name='user_preferences')
    op.drop_index('idx_user_preferences_type', table_name='user_preferences')
    op.drop_index('idx_user_preferences_priority', table_name='user_preferences')
    op.drop_index('idx_user_preferences_key', table_name='user_preferences')
    op.drop_index('idx_user_preferences_active', table_name='user_preferences')
    op.drop_table('user_preferences')
    op.drop_index('idx_task_logs_user_id', table_name='task_logs')
    op.drop_index('idx_task_logs_type', table_name='task_logs')
    op.drop_index('idx_task_logs_status', table_name='task_logs')
    op.drop_index('idx_task_logs_scheduled_at', table_name='task_logs')
    op.drop_index('idx_task_logs_priority', table_name='task_logs')
    op.drop_index('idx_task_logs_created_at', table_name='task_logs')
    op.drop_table('task_logs')
    op.drop_index('idx_emails_user_id', table_name='emails')
    op.drop_index('idx_emails_received_at', table_name='emails')
    op.drop_index('idx_emails_importance', table_name='emails')
    op.drop_index('idx_emails_gmail_id', table_name='emails')
    op.drop_index('idx_emails_category', table_name='emails')
    op.drop_table('emails')
    op.drop_index('idx_daily_reports_user_id', table_name='daily_reports')
    op.drop_index('idx_daily_reports_user_date', table_name='daily_reports')
    op.drop_index('idx_daily_reports_date', table_name='daily_reports')
    op.drop_table('daily_reports')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_google_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
